<?xml version="1.0"?>

<robot xmlns:xacro="http://ros.org/wiki/xacro" name="dogtooth">
  <!-- robot name parameter -->
  <!-- <xacro:arg name="name" default="" /> -->

  <xacro:arg name="prefix" default="" />
  <xacro:arg name="gazebo_controllers" default="$(find dogtooth_control)/config/control.yaml" />

  <xacro:include filename="$(find dogtooth_description)/urdf/dogtooth_001_macro.urdf.xacro" />

  <!-- Load dogtooth description -->
  <xacro:dogtooth prefix="$(arg prefix)" />
  <xacro:if value="$(arg is_sim)">
    <gazebo>
      <plugin name="$(arg prefix)gazebo_ros2_control" filename="libgazebo_ros2_control.so">
        <parameters>$(arg gazebo_controllers)</parameters>
      </plugin>
    </gazebo>

    <gazebo reference="$(arg prefix)imu_link1">
      <sensor name="$(arg prefix)imu_sensor1" type="imu">
      <plugin filename="libgazebo_ros_imu_sensor.so" name="$(arg prefix)imu_plugin1">
          <ros>
            <namespace>$(arg prefix)</namespace>
            <remapping>~/out:=imu1</remapping>
          </ros>
          <initial_orientation_as_reference>false</initial_orientation_as_reference>
        </plugin>
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <visualize>true</visualize>
      </sensor>
    </gazebo>

    <gazebo reference="$(arg prefix)imu_link2">
      <sensor name="$(arg prefix)imu_sensor2" type="imu">
      <plugin filename="libgazebo_ros_imu_sensor.so" name="$(arg prefix)imu_plugin2">
          <ros>
            <namespace>$(arg prefix)</namespace>
            <remapping>~/out:=imu2</remapping>
          </ros>
          <initial_orientation_as_reference>false</initial_orientation_as_reference>
        </plugin>
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <visualize>true</visualize>
      </sensor>
    </gazebo>

    <gazebo reference="$(arg prefix)gps_link">
      <sensor name="$(arg prefix)gps_sensor" type="gps">
      <plugin filename="libgazebo_ros_gps_sensor.so" name="$(arg prefix)gps_plugin">
          <ros>
            <namespace>$(arg prefix)</namespace>
            <remapping>~/out:=/gps/fix</remapping>
          </ros>
        </plugin>
        <always_on>true</always_on>
        <update_rate>10</update_rate>
      </sensor>
    </gazebo>

    <gazebo reference="$(arg prefix)ultrasonic_link1">
      <sensor name="$(arg prefix)ultrasonic_sensor1" type="ray">
            <always_on>true</always_on>
            <visualize>true</visualize>
            <update_rate>5</update_rate>
            <ray>
            <scan>
                <horizontal>
                <samples>5</samples>
                <resolution>1.000000</resolution>
                <min_angle>-0.12</min_angle>
                <max_angle>0.12</max_angle>
                </horizontal>
                <vertical>
                <samples>5</samples>
                <resolution>1.000000</resolution>
                <min_angle>-0.01</min_angle>
                <max_angle>0.01</max_angle>
                </vertical>
            </scan>
            <range>
                <min>0.02</min>
                <max>3</max>
                <resolution>0.01</resolution>
            </range>
            <noise>
                <type>gaussian</type>
                <mean>0.0</mean>
                <stddev>0.01</stddev>
            </noise>
            </ray>
            <plugin name="ultrasonic_sensor_1" filename="libgazebo_ros_ray_sensor.so">
                  <ros>
                      <remapping>~/out:=ultrasonic_sensor_1</remapping>
                  </ros>
                  <output_type>sensor_msgs/Range</output_type>
                  <radiation_type>ultrasound</radiation_type>
                  <frame_name>$(arg prefix)ultrasonic_link1</frame_name>
            </plugin>
        </sensor> 
    </gazebo>

    <gazebo reference="$(arg prefix)ultrasonic_link2">
      <sensor name="$(arg prefix)ultrasonic_sensor2" type="ray">
            <always_on>true</always_on>
            <visualize>true</visualize>
            <update_rate>5</update_rate>
            <ray>
            <scan>
                <horizontal>
                <samples>5</samples>
                <resolution>1.000000</resolution>
                <min_angle>-0.12</min_angle>
                <max_angle>0.12</max_angle>
                </horizontal>
                <vertical>
                <samples>5</samples>
                <resolution>1.000000</resolution>
                <min_angle>-0.01</min_angle>
                <max_angle>0.01</max_angle>
                </vertical>
            </scan>
            <range>
                <min>0.02</min>
                <max>3</max>
                <resolution>0.01</resolution>
            </range>
            <noise>
                <type>gaussian</type>
                <mean>0.0</mean>
                <stddev>0.01</stddev>
            </noise>
            </ray>
            <plugin name="ultrasonic_sensor_2" filename="libgazebo_ros_ray_sensor.so">
                  <ros>
                      <remapping>~/out:=ultrasonic_sensor_2</remapping>
                  </ros>
                  <output_type>sensor_msgs/Range</output_type>
                  <radiation_type>ultrasound</radiation_type>
                  <frame_name>$(arg prefix)ultrasonic_link2</frame_name>
            </plugin>
        </sensor> 
    </gazebo>
    
    <gazebo reference="$(arg prefix)back_camera">
      <sensor name="$(arg prefix)back_camera" type="depth">
        <always_on>1</always_on>
        <update_rate>1</update_rate>
        <camera name="$(arg prefix)back_camera">
        </camera>
	      <plugin name="$(arg prefix)back_camera_depth_driver" filename="libgazebo_ros_camera.so">
            <ros>
            </ros>
            <camera_name>$(arg prefix)back_camera</camera_name>
            <frame_name>$(arg prefix)back_camera_depth_frame</frame_name>
            <hack_baseline>0.07</hack_baseline>
            <min_depth>0.4</min_depth>
            <max_depth>8</max_depth>
        </plugin>
      </sensor>

      <sensor name="$(arg prefix)back_camera_rgb" type="camera">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>30</update_rate>
        <camera name="$(arg prefix)front_rgb_camera">
          <horizontal_fov>1.02974</horizontal_fov>
          <image>
            <width>1920</width>
            <height>1080</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
          <plugin name="$(arg prefix)back_camera_rgb_driver" filename="libgazebo_ros_camera.so">
            <ros>
            </ros>
            <camera_name>$(arg prefix)back_camera_rgb</camera_name>
            <frame_name>$(arg prefix)back_camera_rgb_frame</frame_name>
            <hack_baseline>0.07</hack_baseline>
          </plugin>
      </sensor>
    </gazebo> 

    <gazebo reference="$(arg prefix)front_camera">
      <sensor name="$(arg prefix)front_camera" type="depth">
        <always_on>1</always_on>
        <update_rate>1</update_rate>
        <camera name="$(arg prefix)front_camera">
        </camera>
	    <plugin name="$(arg prefix)front_camera_depth_driver" filename="libgazebo_ros_camera.so">
            <ros>
            </ros>
            <camera_name>$(arg prefix)front_camera</camera_name>
            <frame_name>$(arg prefix)front_camera_depth_frame</frame_name>
            <hack_baseline>0.07</hack_baseline>
            <min_depth>0.4</min_depth>
            <max_depth>8</max_depth>
        </plugin>
      </sensor>

      <sensor name="$(arg prefix)front_camera_rgb" type="camera">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>30</update_rate>

        <camera name="$(arg prefix)front_rgb_camera">
          <horizontal_fov>1.02974</horizontal_fov>
          <image>
            <width>1920</width>
            <height>1080</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
          <plugin name="$(arg prefix)front_camera_rgb_driver" filename="libgazebo_ros_camera.so">
            <ros>
            </ros>
            <camera_name>$(arg prefix)front_camera_rgb</camera_name>
            <frame_name>$(arg prefix)front_camera_rgb_frame</frame_name>
            <hack_baseline>0.07</hack_baseline>
          </plugin>
      </sensor>
    </gazebo>  

    <gazebo reference="$(arg prefix)lidar_link">
        <sensor name="$(arg prefix)lidar" type="ray">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>5</update_rate>
        <ray>
            <scan>
            <horizontal>
                <samples>360</samples>
                <resolution>1.000000</resolution>
                <min_angle>0.000000</min_angle>
                <max_angle>3.140000</max_angle>
            </horizontal>
            </scan>
            <range>
            <min>0.80000</min>
            <max>3.5</max>
            <resolution>0.015000</resolution>
            </range>
            <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
            </noise>
        </ray>
        <plugin name="$(arg prefix)scan" filename="libgazebo_ros_ray_sensor.so">
            <ros>
            <remapping>~/out:=scan</remapping>
            </ros>
            <output_type>sensor_msgs/LaserScan</output_type>
            <frame_name>$(arg prefix)lidar_link</frame_name>
        </plugin>
        </sensor>
    </gazebo>

  </xacro:if>
</robot>
